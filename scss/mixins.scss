@import 'variables';

@mixin container($uid: container, $small: 640px, $medium: 768px, $large: 1024px, $xlarge: 1060px) {
  $container: (
    '': 100%,
    '-sm': $small,
    '-md': $medium,
    '-lg': $large,
    '-xl': $xlarge,
  );
  @each $prop, $value in $container {
    .#{$uid}#{$prop} {
      max-width: $value;
    }
  }
}

// Small devices
@mixin sm {
  @media (min-width: #{$screen-sm-min}) {
    @content;
  }
}

// Medium devices
@mixin md {
  @media (min-width: #{$xs-max}) {
    @content;
  }
}

// Large devices
@mixin lg {
  @media (min-width: #{$screen-lg-min}) {
    @content;
  }
}

// Extra large devices
@mixin xl {
  @media (min-width: #{$screen-xl-min}) {
    @content;
  }
}

// Extra large devices
@mixin xll {
  @media (min-width: #{$screen-xll-min}) {
    @content;
  }
}

@mixin input {
  border: 1px solid #909090;
  border-radius: 10px;
  width: 100%;
  height: 50px;
  padding: 0 20px;
  &::placeholder{
    color: #050505;
    opacity: 1;
    font-size: 14px;
    font-weight: 600;
  }
}

@mixin inputError {
  border-color: #C60D0D;
  color: #C60D0D;
  &::placeholder{
    color: #C60D0D;
  }
}

@mixin error{
  color: #C60D0D;
  font-size: 12px;
  margin-top: 5px;
  position: absolute;
  bottom: -16px;
  left: 0px;
}



//ui
@mixin inputLabel {
  position: absolute;
  padding: 0 5px;
  background-color: #fff;
  font-size: 15px;
  color: #828282;
  top: -8px;
  left: 15px;
}

// gap workaround
@mixin list($gap, $row: false) {
  @if $row == true {
    & > * + * {
      margin: 0 0 0 $gap;
    }
  } @else {
    & > * + * {
      margin: $gap 0 0 0;
    }
  }
}

@mixin clearfix {
  &::after {
    content: "";
    clear: both;
    display: table;
  }
}
